{"version":3,"sources":["gulpfile.js"],"names":[],"mappings":"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","file":"gulpfile-compiled.js","sourcesContent":["'use strict';\n\nvar gulp = require('gulp'),\n    changed = require('gulp-changed'),\n    sass = require('gulp-sass'),\n    csso = require('gulp-csso'),\n    autoprefixer = require('autoprefixer-core'),\n    browserify = require('browserify'),\n    watchify = require('watchify'),\n    source = require('vinyl-source-stream'),\n    buffer = require('vinyl-buffer'),\n    eslint = require('gulp-eslint'),\n    babelify = require('babelify'),\n    uglify = require('gulp-uglify'),\n    del = require('del'),\n    notify = require('gulp-notify'),\n    browserSync = require('browser-sync'),\n    sourcemaps = require('gulp-sourcemaps'),\n    postcss = require('gulp-postcss'),\n    htmlReplace = require('gulp-html-replace'),\n    image = require('gulp-image'),\n    reload = browserSync.reload,\n    p = {\n      jsx: './scripts/app.js',\n      scss: 'styles/**/*.scss',\n      bundle: 'app.js',\n      distJs: 'dist/js',\n      distCss: 'dist/css',\n      distHtml: 'dist',\n      distImg: 'dist/img'\n    };\n\ngulp.task('clean', function(cb) {\n  del(['dist'], cb);\n});\n\ngulp.task('browserSync', function() {\n  browserSync({\n    server: {\n      baseDir: './'\n    }\n  });\n});\n\ngulp.task('watchify', function() {\n  var bundler = watchify(browserify(p.jsx, watchify.args));\n\n  function rebundle() {\n    return bundler\n      .bundle()\n      .on('error', notify.onError())\n      .pipe(source(p.bundle))\n      .pipe(gulp.dest(p.distJs))\n      .pipe(reload({stream: true}));\n  }\n\n  bundler.transform(babelify)\n  .on('update', rebundle);\n  return rebundle();\n});\n\ngulp.task('browserify', function() {\n  browserify(p.jsx)\n    .transform(babelify)\n    .bundle()\n    .pipe(source(p.bundle))\n    .pipe(buffer())\n    .pipe(sourcemaps.init({loadMaps: true}))\n    .pipe(uglify())\n    .pipe(sourcemaps.write('./'))\n    .pipe(gulp.dest(p.distJs));\n});\n\ngulp.task('styles', function() {\n  return gulp.src(p.scss)\n    .pipe(changed(p.distCss))\n    .pipe(sass({errLogToConsole: true}))\n    .on('error', notify.onError())\n    .pipe(postcss([autoprefixer('last 1 version')]))\n    .pipe(csso())\n    .pipe(gulp.dest(p.distCss))\n    .pipe(reload({stream: true}));\n});\n\ngulp.task('html-replace', function () {\n  var replacements = {\n    css: 'css/main.css',\n    js: 'js/app.js'\n  };\n\n  return gulp.src('index.html')\n    .pipe(htmlReplace(replacements))\n    .pipe(gulp.dest(p.distHtml));\n});\n\ngulp.task('image', function () {\n  return gulp.src('img/**')\n    .pipe(image())\n    .pipe(gulp.dest(p.distImg));\n});\n\ngulp.task('lint', function() {\n  return gulp.src('scripts/**/*.js')\n    .pipe(eslint())\n    .pipe(eslint.format());\n});\n\ngulp.task('watchTask', function() {\n  gulp.watch(p.scss, ['styles']);\n  gulp.watch('scripts/**/*.js', ['lint']);\n});\n\ngulp.task('watch', ['clean'], function() {\n  gulp.start(['browserSync', 'watchTask', 'watchify', 'styles', 'lint', 'image']);\n});\n\ngulp.task('build', ['clean'], function() {\n  process.env.NODE_ENV = 'production';\n  gulp.start(['browserify', 'styles', 'html-replace', 'image']);\n});\n\ngulp.task('default', function() {\n  console.log('Run \"gulp watch or gulp build\"');\n});\n"]}